## @section Snyk Broker parameters
## @param brokerClientUrl is the address of the broker. This needs to be the address of itself. In the case of Kubernetes, you need to ensure that you are pointing to the cluster ingress you have setup.
## brokerClientUrl:http://kubernetes-ingress.domain.com:8000
brokerClientUrl: ""

## @param region [string] Optionally specify a Snyk Region - e.g. "eu" for "SNYK-EU-01". Defaults to "SNYK-US-01", app.snyk.io
## Default endpoints are for the Snyk-US-01 region.
## See https://docs.snyk.io/working-with-snyk/regional-hosting-and-data-residency#regional-urls for options.
region: ""

## @param preflightChecks.enabled broker client preflight checks
preflightChecks:
  enabled: true

##### Snyk Platform Auth #####
## @descriptionStart
## Refer to documentation via [docs.snyk.io](https://docs.snyk.io/enterprise-setup/snyk-broker/universal-broker/initial-configuration-of-the-universal-broker) to obtain `deploymentId`, `clientId`, `clientSecret` values.
##
## Credential References should contain one or more key/value pairs where each key matches the `environment_variable_name` of a `deployment_credential`, and the value provides the secret. For example:
## ```bash
## helm install ... --set credentialReferences.MY_GITHUB_TOKEN=<gh-pat>
## ```
## @descriptionEnd

## @param deploymentId [string] Obtained by installing the Broker App
## @param clientId [string] Obtained by installing the Broker App
## @param clientSecret [string] Obtained by installing the Broker App

deploymentId: ""
clientId: ""
clientSecret: ""

## @param platformAuthSecret.name [string] Optionally provide an external secret containing three keys: `DEPLOYMENT_ID`, `CLIENT_ID` and `CLIENT_SECRET`
platformAuthSecret:
  name: ""

## See https://docs.snyk.io/enterprise-setup/snyk-broker/universal-broker/set-up-a-github-connection-using-the-api for an example GitHub connection
## See https://docs.snyk.io/enterprise-setup/snyk-broker/universal-broker/restart-your-broker-with-the-required-environment-variable-and-connect for an example of passing tokens required for the above GitHub connection to the Broker
## @param credentialReferences [object] Credential References to pass to Broker
## Each entry should be of form <ENV_VALUE_NAME>:<SECRET_VALUE>, which should match a configured Credential Reference.
## e.g:
## credentialReferences:
##   MY_GITHUB_TOKEN: <github-pat>
##   MY_OTHER_GITHUB_TOKEN: <another-github-pat>
credentialReferences: {}

## @param credentialReferencesSecret.name [string] Optionally provide a pre-existing secret with SCM credential reference data
## This secret should contain one or more key/value pairs, where the key matches the `environment_variable_name` of a `deployment_credential`
credentialReferencesSecret:
  name: "" # Name of an existing secret if it exists

## @param acceptCode [default: true] Set to false to block Broker rules relating to Snyk Code analysis
## @param acceptAppRisk [default: true] Set to false to block Broker rules relating to AppRisk
## @param acceptIaC [string] Defaults to "tf,yaml,yml,json,tpl". Optionally remove any extensions not required. Must be comma separated. Set to "" to block Broker rules relating to Snyk IaC analysis
## @param acceptCustomPrTemplates [default: true] Set to false to block Broker rules relating to Snyk Custom PR Templates
## @param acceptLargeManifests [default: true] Set to false to block Broker rules relating to fetching of large files from GitHub/GitHub Enterprise
acceptCode: true
acceptAppRisk: true
acceptIaC: "tf,yaml,yml,json,tpl"
acceptCustomPrTemplates: true
acceptLargeManifests: true

## @section Networking Parameters

## @param containerPort Port to open for HTTP in Broker
containerPort: 8000

## @param hostAliases Broker pod host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []

## @param service.type [default: ClusterIP] Set the included Service type
## @param service.port [default: 8000] Set the port the Service will expose
## @param service.nodePort [nullable] Optionally specify a nodePort (only takes effect if service.type=NodePort)
## @param service.clusterIP [nullable] Optionally specify an IP address (only takes effect if service.type=ClusterIP)
## @param service.loadBalancerIP [nullable] Optionally specify an IP address (only takes effect if service.type=LoadBalancer)
## @param service.loadBalancerSourceRanges [array] Specify an array of CIDR blocks to permit traffic from (only takes effect if service.type=LoadBalancer)
## @param service.externalTrafficPolicy [string, default: Cluster] Set the externalTrafficPolicy of the service (only takes effect if service.type=LoadBalancer)
## @param service.extraPorts [array] Add extra ports to the Service
## @param service.tls [array] Enable TLS at the Service level
service:
  type: ClusterIP
  port: 8000
  nodePort: null
  clusterIP: null
  loadBalancerIP: null
  loadBalancerSourceRanges: []
  externalTrafficPolicy: Cluster
  extraPorts: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## @section Broker Ingress

## @param ingress.enabled [default: false] Set to true to create an Ingress
## @param ingress.className [string] Optionally define an Ingress Class
## @param ingress.annotations [object] Additional annotations for the Ingress resource
## @param ingress.path [string, default: "/"] sets the path associated with the ingress
## @param ingress.pathType [string, default: "ImplementationSpecific"] sets the path type associated with the ingress
## @param ingress.hostname [string, default: "broker.local"] define the host associated with this ingress - add Broker_client_url here
## @param ingress.extraHosts [array] An array with additional hostname(s) to be covered with the ingress record
## @param ingress.extraPaths [array] Any additional arbitrary paths that may need to be added to the ingress under the main host
## @param ingress.extraTls [array] Any additional tls entries to add to the ingress
## @param ingress.extraRules [array] Any additional rules to add to the ingress
## @param ingress.secrets [array] A list of TLS secrets to create, each with `name`, `key` and `certificate`
## @param ingress.tls.enabled [default: false] Set to true to enable TLS on the in-built ingress
## @param ingress.tls.existingSecret [string] Specify an existing TLS secret to use with this ingress
ingress:
  enabled: false
  className: ""
  annotations: {}
    ## E.g.
    ## kubernetes.io/ingress.class: nginx
    ## kubernetes.io/tls-acme: "true"
  path: /
  pathType: ImplementationSpecific
  hostname: "broker.local"
  extraHosts: []
  extraPaths: []
  extraTls: []
  extraRules: []
  secrets: []
  tls:
    enabled: false
    existingSecret: ""

## @param resources.requests.cpu Set CPU requests
## @param resources.requests.memory Set memory requests
## @param resources.limits.cpu Set CPU limits
## @param resources.limits.memory Set memory limits
resources:
  requests:
    cpu: 1
    memory: 512Mi
  limits:
    cpu: 2
    memory: 1024Mi

## @param highAvailabilityMode.enabled snyk [default: true] Set to false to disable High Availability Mode for Broker
## @param highAvailabilityMode.replicaCount [default: 2] Number of Broker pods when running in HA mode (min 2, max 4)

highAvailabilityMode:
  enabled: true
  replicaCount: 2

## @param commonLabels Labels to add to all deployed objects (sub-charts are not considered)
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects (sub-charts are not considered)
##
commonAnnotations: {}

## @param podLabels Pod labels
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}

##### Liveness and Readiness Probes #####
## Configure Broker containers' options for liveness probe
## @param livenessProbe.enabled Enable livenessProbe
## @param livenessProbe.path Path for the livenessProbe
## @param livenessProbe.config.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.config.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.config.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.config.failureThreshold Failure threshold for livenessProbe

livenessProbe:
  enabled: true
  path: "/healthcheck"
  config:
    initialDelaySeconds: 3
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3

## Configure Broker containers' options for readinessProbe probe
## @param readinessProbe.enabled Enable readinessProbe
## @param readinessProbe.path Path for the readinessProbe
## @param readinessProbe.config.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.config.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.config.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.config.failureThreshold Failure threshold for readinessProbe

readinessProbe:
  enabled: true
  path: "/healthcheck"
  config:
    initialDelaySeconds: 3
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3

## Logging #####
## @param logLevel defines Log Level for broker client pod. Can be set to "debug" for more information
## @param logEnableBody adds additional logging by setting to true

logLevel: "info"
logEnableBody: "false"

## Enable HTTPS #####
## @param enableBrokerLocalWebserverOverHttps enables Broker client to run a HTTPS server instead of the default HTTP server
## @param httpsCert provides HTTPS cert
## @param httpsKey provides HTTPS cert key

enableBrokerLocalWebserverOverHttps: false
httpsCert: ""
httpsKey: ""

##### HTTPS Inspection #####

## @param caCert Set caCert to read certificate content from the values.yaml file as a multiline string:
## Include any/all certificates required for a full trust chain.
##
## caCert: |-
##   ----- BEGIN CERTIFICATE -----
##   < certificate data >
##   ----- END CERTIFICATE -----
##   ----- BEGIN CERTIFICATE -----
##   < another certificate >
##   ----- END CERTIFICATE -----
##
## or
##
## caCert: "----- BEGIN CERTIFICATE -----\n.....\n----- END CERTIFICATE -----"
caCert: ""

## @param caCertMount.path [string, default:"/home/node/cacert"] the path to mount a certificate bundle to
## @param caCertMount.name [string, default:"cacert"] the filename to write a certificate bundle to
caCertMount:
  path: /home/node/cacert
  name: cacert

## @param caCertSecret.name [string] set to read a CA cert from an external secret
## @param caCertSecret.caCertKey [default: ca.pem] set to read the ca cert from a different key
caCertSecret:
  name: ""
  caCertKey: ca.pem

## @param disableAllCertificateTrust [default: false] Set to `true` to disable trust of **all** certificates, including any provided CAs
disableAllCertificateTrust: false

##### Use behind proxy #####

## @param httpProxy Do not change unless advised by your Snyk Representative. You probably need to use HTTPS proxy setting and leave this blank. - HTTP Proxy URL
## @param httpsProxy HTTPS Proxy URL - This will apply to both Snyk Broker
## @param noProxy provide URl here which doesn't need to go through a proxy(do not include protocol)
httpProxy: ""
httpsProxy: ""
noProxy: ""

## @section Image Registry
## @param image.registry [default: docker.io] Broker image registry
## @param image.repository [default: snyk/broker] Broker image repository
## @param image.tag [default: universal] Broker image tag
## @param image.pullPolicy [default: IfNotPresent] Broker image pull policy
## @param image.pullSecrets [array] Optionally provide any existing image pull secrets
image:
  registry: docker.io
  repository: snyk/broker
  pullPolicy: IfNotPresent
  # Overrides the image tag
  tag: "universal"
  pullSecrets: []
  # - name: registrySecretName

## @section Service Account
serviceAccount:
  ## @param serviceAccount.create [default: true] Enable creation of a serviceAccount
  create: true
  ## @param serviceAccount.existingName [string] Optionally provide an existing serviceAccount name
  existingName: ""
  ## @param serviceAccount.annotations [object] Additional custom annotations for the serviceAccount
  annotations: {}
  ## @param serviceAccount.name [string] The name of the serviceAccount to create. If not set and create is true, a name is generated
  name: ""

## Pod security context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enable security context for Broker Pods
## @param podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
## @param podSecurityContext.sysctls Set kernel settings using the sysctl interface
## @param podSecurityContext.supplementalGroups Set filesystem extra groups
## @param podSecurityContext.fsGroup Group ID for the volumes of the pod
##
podSecurityContext:
  enabled: true
  fsGroupChangePolicy: Always
  sysctls: []
  supplementalGroups: []
  fsGroup: 1000

## Container security context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enabled Broker containers' Security Context
## @param containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
## @param containerSecurityContext.runAsUser Set Broker  containers' Security Context runAsUser
## @param containerSecurityContext.runAsGroup Set Broker containers' Security Context runAsGroup
## @param containerSecurityContext.allowPrivilegeEscalation Set Broker containers' Security Context allowPrivilegeEscalation
## @param containerSecurityContext.capabilities.drop Set containers' repo server Security Context capabilities to be dropped
## @param containerSecurityContext.readOnlyRootFilesystem Set containers' repo server Security Context readOnlyRootFilesystem
## @param containerSecurityContext.runAsNonRoot Set Broker containers' Security Context runAsNonRoot
## @param containerSecurityContext.privileged Set container's Security Context privileged
## @param containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
##
containerSecurityContext:
  enabled: true
  seLinuxOptions: {}
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true
  privileged: false
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: "RuntimeDefault"
  readOnlyRootFilesystem: true

## @param extraVolumes Optionally specify extra list of additional volumes for Broker container
extraVolumes: []

## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for Broker container
extraVolumeMounts: []

## @param extraEnvVars Optionally specify extra list of additional environment variables for Broker container
extraEnvVars: []
