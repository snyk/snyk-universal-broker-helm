version: 2.1

orbs:
  prodsec: snyk/prodsec-orb@1
  helm: circleci/helm@3

parameters:
  kubectl-version:
    type: string
    default: "1.28"

jobs:
  validate_charts:
    docker:
      - image: alpine/k8s:1.28.14
    resource_class: small
    parameters:
      deployment-id:
        type: env_var_name
        default: DEPLOYMENT_ID
      client-id:
        type: env_var_name
        default: CLIENT_ID
      client-secret:
        type: env_var_name
        default: CLIENT_SECRET
      my-ghe-token:
        type: env_var_name
        default: MY_GHE_TOKEN
      snyk-token:
        type: env_var_name
        default: "SNYK_API_TOKEN"
    steps:
      - checkout
      - run:
          name: Helm dependencies
          command: helm dep up
          working_directory: snyk-universal-broker
      - run:
          name: Run helm unittest
          command: helm unittest .
          working_directory: snyk-universal-broker
      - run:
          name: Template to file
          command: |
            helm template \
              -f values.yaml \
              --set deploymentId=${<<parameters.deployment-id>>} \
              --set clientId=${<<parameters.client-id>>} \
              --set clientSecret=${<<parameters.client-secret>>} \
              --set credentialReferences.MY_GHE_TOKEN=${<<parameters.my-ghe-token>>} \
              . > template.yaml
          working_directory: snyk-universal-broker
      - run:
          name: Kubeconform
          command: |
            kubeconform -ignore-missing-schemas template.yaml
          working_directory: snyk-universal-broker

  validate_documentation:
    docker:
      - image: cimg/node:20.18.0
    resource_class: small
    steps:
      - checkout
      - run:
          name: Run the readme generator
          command: npx @bitnami/readme-generator-for-helm -v snyk-universal-broker/values.yaml -r README.md
      - run:
          name: Check if files in CI have changed
          command: |
            if [[ -n $(git diff --name-only README.md) ]]; then
              echo "README content not synchronised with values.yaml"
              exit 1
            fi

  deploy_and_test:
    machine:
      image: ubuntu-2204:current
    resource_class: medium
    parameters:
      deployment-id:
        type: env_var_name
        default: DEPLOYMENT_ID
      client-id:
        type: env_var_name
        default: CLIENT_ID
      client-secret:
        type: env_var_name
        default: CLIENT_SECRET
      my-ghe-token:
        type: env_var_name
        default: MY_GHE_TOKEN
      snyk-token:
        type: env_var_name
        default: "SNYK_API_TOKEN"
    steps:
      - checkout
      - helm/install_helm_client
      - helm/install_helm_plugin:
          helm_plugin_url: https://github.com/helm-unittest/helm-unittest
      - run:
          name: Install Pre-reqs
          command: |
            curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
            curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
            echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v<<pipeline.parameters.kubectl-version>>/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
            sudo apt-get update
            sudo apt-get install -y kubectl
      - run:
          name: Deploy Universal Broker
          command: |
            k3d cluster create
            helm install \
              --debug \
              --wait \
              -f values.yaml \
              --set region=dev \
              --set deploymentId=${<<parameters.deployment-id>>} \
              --set clientId=${<<parameters.client-id>>} \
              --set clientSecret=${<<parameters.client-secret>>} \
              --set credentialReferences.MY_GHE_TOKEN=${<<parameters.my-ghe-token>>} \
              snyk-universal-broker \
              .
          working_directory: snyk-universal-broker
      - run:
          name: Test Import
          command: |
            LOG_LEVEL="debug" \
              SNYK_TOKEN=${<<parameters.snyk-token>>} \
              npx \
              --yes \
              tsx \
              .circleci/scripts/testImport/testImport.ts \
              ".circleci/snyk-import/snyk-import-ghe.json" \
              "https://api.dev.snyk.io"

  publish:
    docker:
      - image: cimg/node:22.9
    resource_class: small
    parameters:
      dockerhub-password:
        type: env_var_name
        default: DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          name: Install npm dependencies
          command: npm ci
      - helm/install_helm_client
      - run:
          name: Docker Login for OCI Push
          command: |
            echo "${<<parameters.dockerhub-password>>}" | helm registry login -u snykdocker --password-stdin registry-1.docker.io
      - run:
          name: Run semantic-release
          command: npx semantic-release

workflows:
  validate_and_publish:
    jobs:
      - prodsec/secrets-scan:
          name: Scan repository for secrets
          context:
            - snyk-bot-slack
          channel: hybrid-alerts
          trusted-branch: main
      - validate_charts:
          context:
            - snyk-universal-broker-helm-chart
      - validate_documentation
      # - deploy_and_test:
      #     context:
      #       - snyk-universal-broker-helm-chart
      - publish:
          context:
            - team-broker-docker-hub
          requires:
            - validate_charts
            - validate_documentation
          filters:
            branches:
              only:
                - main
                - rc
